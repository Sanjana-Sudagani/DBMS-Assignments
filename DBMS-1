1. Find out the PG-13 rated comedy movies. DO NOT use the film_list table.

mysql> select title as ComedyFilms
    -> from film f,film_category fc,category c
    -> where f.film_id=fc.film_id and fc.category_id=c.category_id and f.rating="PG-13" and c.name="Comedy";
+-------------------------+
| ComedyFilms             |
+-------------------------+
| AIRPLANE SIERRA         |
| ANTHEM LUKE             |
| FLINTSTONES HAPPINESS   |
| FREEDOM CLEOPATRA       |
| GROUNDHOG UNCUT         |
| KNOCK WARLOCK           |
| PARADISE SABRINA        |
| PERFECT GROOVE          |
| RUSHMORE MERMAID        |
| SADDLE ANTITRUST        |
| STRICTLY SCARFACE       |
| TRAINSPOTTING STRANGERS |
+-------------------------+
12 rows in set (0.01 sec)


2. Find out the top 3 rented horror movies.

mysql> SELECT f.title as HorrorMovies
    -> FROM rental r, film f, inventory i, film_category fc, category c
    -> where r.inventory_id=i.inventory_id and i.film_id=f.film_id and f.film_id=fc.film_id and fc.category_id=c.category_id
    -> and c.name="Horror"
    -> group by f.title
    -> order by count(f.film_id) desc
    -> limit 3;
+--------------+
| HorrorMovies |
+--------------+
| PULP BEVERLY |
| FAMILY SWEET |
| SWARM GOLD   |
+--------------+
3 rows in set (0.00 sec)


3. Find out the list of customers from India who have rented sports movies.

mysql> select concat(first_name , ' ' , last_name) as Customer_Names
    -> from customer cu,address a,country co,city ci,rental r,inventory i, category c,film_category fc
    -> where c.category_id=fc.category_id and fc.film_id=i.film_id and i.inventory_id=r.inventory_id and r.customer_id=cu.customer_id and cu.address_id=a.address_id and a.city_id=ci.city_id and ci.country_id=co.country_id
    -> and co.country="India" and c.name="Sports"
    -> group by cu.customer_id;

+-------------------+
| Customer_Names    |
+-------------------+
| LENA JENSEN       |
| SAMUEL MARLOW     |
| WAYNE TRUONG      |
| ADAM GOOCH        |
| SHANNON FREEMAN   |
| DWAYNE OLVERA     |
| TIM CARY          |
| NAOMI JENNINGS    |
| LORI WOOD         |
| CHAD CARBONE      |
| GERALD FULTZ      |
| STEVEN CURLEY     |
| BRETT CORNWELL    |
| PEARL GARZA       |
| PENNY NEAL        |
| RAMONA HALE       |
| MILTON HOWLAND    |
| NICOLE PETERSON   |
| LEE HAWKS         |
| BRADLEY MOTLEY    |
| LUCY WHEELER      |
| HELEN HARRIS      |
| JOSEPHINE GOMEZ   |
| GEORGIA JACOBS    |
| MIKE WAY          |
| ANNETTE OLSON     |
| SALLY PIERCE      |
| TONYA CHAPMAN     |
| MILDRED BAILEY    |
| JOSHUA MARK       |
| THEODORE CULP     |
| NINA SOTO         |
| JUANITA MASON     |
| CHERYL MURPHY     |
| LAURIE LAWRENCE   |
| EDITH MCDONALD    |
| AMY LOPEZ         |
| ANITA MORALES     |
| ALLEN BUTTERFIELD |
| SHERRI RHODES     |
| NANCY THOMAS      |
| ARLENE HARVEY     |
| BERNARD COLBY     |
| JOHN FARNSWORTH   |
| PAULA BRYANT      |
| CYNTHIA YOUNG     |
| CARLOS COUGHLIN   |
| BEATRICE ARNOLD   |
| CHRISTIAN JUNG    |
| HOLLY FOX         |
+-------------------+
50 rows in set (0.01 sec)


4. Find out the list of customers from Canada who have rented “NICK WAHLBERG” movies.

mysql> select concat(c.first_name," ",c.last_name) as Customer_Names
    -> from customer c,rental r,inventory i,film f, address a,city ci, country co,actor ac,film_actor fa
    -> where f.film_id=i.film_id and i.inventory_id=r.inventory_id and r.customer_id=c.customer_id and c.address_id=a.address_id and a.city_id=ci.city_id and ci.country_id=co.country_id and f.film_id=fa.film_id and fa.actor_id=ac.actor_id
    -> and co.country="Canada" and ac.first_name ="NICK" and ac.last_name="WAHLBERG"
    -> group by c.customer_id;
+-------------------+
| Customer_Names    |
+-------------------+
| LORETTA CARPENTER |
| DARRELL POWER     |
+-------------------+
2 rows in set (0.01 sec)
 

5. Find out the number of movies in which “SEAN WILLIAMS” acted.

mysql> select count(f.title) as no_of_movies
    -> from film f,film_actor fa,actor a
    -> where f.film_id=fa.film_id and fa.actor_id=a.actor_id
    -> and a.first_name="SEAN" and a.last_name="WILLIAMS";
+--------------+
| no_of_movies |
+--------------+
|           26 |
+--------------+
1 row in set (0.00 sec)

